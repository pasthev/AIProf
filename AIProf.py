import streamlit as st
import google.generativeai as genai

def warning(message):
	if log:
		st.warning(message)

# Configuration de l'API Gemini
# https://docs.streamlit.io/develop/concepts/connections/secrets-management 
API_KEY = st.secrets["API_KEY"]
genai.configure(api_key=API_KEY)
model = genai.GenerativeModel("gemini-pro")

log = False
# Interface Streamlit
st.title("üìñ AIProf")
st.write("Assistance √† la pr√©paration d'apprentissages - niveaux √©l√©mentaires")

# Champs de texte utilisateur
texte = st.text_input("Sur quoi doit porter l'apprentissage (exemple : Les fleuves de France) :", "")
special = st.text_input("Indiquez s'il y a des consignes particuli√®res √† respecter (exemple : Insister sur ce qui d√©finit un fleuve):", "")


# Curseur pour l'√¢ge des √©l√®ves
age = st.slider("√Çge des √©l√®ves :", 6, 10, 7)
nbre_eleves = st.slider("Nombre d'√©l√®ves :", 1, 34, 23)

# Variables textes
emptytext = "Veuillez entrer un sujet d'apprentissage."
subject = f" sur le sujet suivant : {texte}."
# public = f" Adapte le niveau pour des √©l√®ves √¢g√©s de {age} ans. Si tu estimes ce sujet trop avanc√© pour commencer √† l'enseigner √† des √©l√®ves de cet √¢ge, indique-le en t√™te de ta r√©ponse."
public = f" Adapte le niveau pour des √©l√®ves √¢g√©s de {age} ans. Commence ta r√©ponse par un petit paragraphe intitul√© 'Pertinence du sujet' dans lequel tu indiques si tu estimes ce sujet appropri√© ou trop avanc√© pour commencer √† l'enseigner √† des √©l√®ves de cet √¢ge, suivi d'une hline."
answers = " √Ä la fin de ta r√©ponse, ins√®re une hline puis un titre gras 'R√©ponses pour l'enseignant', et indique la liste des r√©ponses correctes."
consigne = ""
nombre = f" La classe compte {nbre_eleves} √©l√®ves."
if special:
	consigne = f" Consigne particuli√®re √† respecter : {special}."

# Boutons pour g√©n√©rer diff√©rents contenus
col1, col2, col3, col4, col5, col6 = st.columns(6)

if col1.button("Cours"):
    if texte:
        prompt = "Propose-moi un mod√®le p√©dagogique de cours" + subject + public +  nombre + consigne
        warning(prompt)
        response = model.generate_content(prompt)
        st.subheader("Proposition de cours :")
        st.write(response.text)
    else:
        st.warning(emptytext)

if col2.button("Exercices"):
    if texte:
        prompt = "Propose-moi des exercices pratiques" + subject + public + consigne + answers
        warning(prompt)
        response = model.generate_content(prompt)
        st.subheader("Exercices pratiques :")
        st.write(response.text)
    else:
        st.warning(emptytext)

if col3.button("Ateliers"):
    if texte:
        prompt = "Propose-moi un mod√®le d'atelier p√©dagogique en sous-groupes" + subject + public + nombre + consigne
        warning(prompt)
        response = model.generate_content(prompt)
        st.subheader("Proposition de cours :")
        st.write(response.text)
    else:
        st.warning(emptytext)

if col4.button("R√©visions"):
    if texte:
        prompt = "Propose-moi un plan de r√©vision" + subject + public + consigne
        warning(prompt)
        response = model.generate_content(prompt)
        st.subheader("Plan de r√©vision :")
        st.write(response.text)
    else:
        st.warning(emptytext)

if col5.button("Devoirs"):
    if texte:
        prompt = "R√©dige des devoirs √† la maison sous forme de 3 √† 5 exercices pr√™ts √† pr√©senter" + subject + public + consigne + answers
        warning(prompt)
        response = model.generate_content(prompt)
        st.subheader("Devoirs :")
        st.write(response.text)
    else:
        st.warning(emptytext)
		
if col6.button("Quizz"):
    if texte:
        prompt = "R√©dige un quizz pr√™t √† pr√©senter" + subject + public + consigne + answers
        warning(prompt)
        response = model.generate_content(prompt)
        st.subheader("Quizz :")
        st.write(response.text)
    else:
        st.warning(emptytext)

st.image("AIProf01.jpg", caption="pasthev 2025")

# Ex√©cuter l'application avec : streamlit run AIProf.py ou python -m streamlit run AIProf.py